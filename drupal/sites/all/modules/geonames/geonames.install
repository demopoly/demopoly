<?php

/**
 * @file
 * Install, update and uninstall functions for the geonames module.
 *
 */

/*
 * @file
 * Install and schema for geonames module
 */

/**
 * Implements hook_schema().
 */
function geonames_schema() {
  $schema['geonames_countryinfo'] = array(
    'description' => 'GeoNames.org Country Information',
    'fields' => array(
      'iso_alpha2' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 2,
        'description' => 'two-letter country code (ISO 3166-1-alpha-2)',
      ),
      'iso_alpha3' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 3,
        'description' => 'three-letter country code (ISO 3166-1 alpha-3)',
      ),
      'iso_numeric' => array(
        'type' => 'int',
        'not null' => TRUE,
        'size' => 'small',
        'unsigned' => TRUE,
        'description' => 'three-digit country code (ISO 3166-1 numeric)',
      ),
      'fips_code' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 3,
        'description' => 'Federal Information Processing Standards (FIPS) country code',
      ),
      'name' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 60,
        'description' => 'Country name',
      ),
      'capital' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 60,
        'description' => 'Capital',
      ),
      'areainsqkm'  => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 11,
        'description' => 'Area(in sq km)',
      ),
      'population'  => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 11,
        'description' => 'Population',
      ),
      'continent'   => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 2,
        'description' => 'Continent, one of [AF, AS, EU, NA, OC, SA, AN]',
      ),
      'tld' => array(
        'type' => 'varchar',
        'length' => '200',
        'not null' => FALSE,
        'description' => 'Internet Top-Level Domain (including leading dot)',
      ),
      'currency'    => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 3,
        'description' => 'Currency Code',
      ),
      'currencyname' => array(
        'type' => 'varchar',
        'length' => '200',
        'not null' => FALSE,
        'description' => 'Currency Name',
      ),
      'phone' => array(
        'type' => 'varchar',
        'length' => '200',
        'not null' => FALSE,
        'description' => 'IDD Phone Prefix',
      ),
      'postal_code_format' => array(
        'type' => 'varchar',
        'length' => '200',
        'not null' => FALSE,
        'description' => 'Postal Code Format',
      ),
      'postal_code_regex' => array(
        'type' => 'varchar',
        'length' => '200',
        'not null' => FALSE,
        'description' => 'Postal Code Regex',
      ),
      // moved down!
      'languages'   => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 100,
        'description' => 'Lists of languages spoken in a country ordered by the number of speakers',
      ),
      'geonameid'   => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'description' => 'Unique geonames identifier',
      ),
      'neighbours' => array(
        'type' => 'varchar',
        'length' => '200',
        'not null' => FALSE,
        'description' => 'two-letter codes for countries that border this country',
      ),
      'equivalentfipscode' => array(
        'type' => 'varchar',
        'length' => '200',
        'not null' => FALSE,
        'description' => 'Equivalent Fips Code',
      ),
    ),
    'indexes' => array(
      'iso_alpha3' => array('iso_alpha3'),
      'iso_numeric' => array('iso_numeric'),
      'fips_code' => array('fips_code'),
      'continent' => array('continent'),
      'currency' => array('currency'),
      'iso_alpha2' => array('iso_alpha2'),
    ),
    'primary key' => array('geonameid'),
  );

  $schema['geonames_featurecodes'] = array(
    'description' => 'List of feature-codes in geonames - see http://www.geonames.org/export/codes.html',
    'fields' => array(
      'class' => array(
        'type' => 'varchar',
        'length' => 1,
        'not null' => TRUE,
        'description' => 'One-letter category: A, H, L, P, R, S, T, U, V',
      ),
      'code' => array(
        'type' => 'varchar',
        'length' => 10,
        'not null' => TRUE,
        'description' => 'Feature code',
      ),
      'name' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 64,
        'description' => 'Short name of feature',
      ),
      'description' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
        'description' => 'Description of feature',
      ),
    ),
    'primary key' => array('class', 'code'),
  );

  $schema['cache_geonames'] = drupal_get_schema_unprocessed('system', 'cache');
  $schema['cache_geonames']['description'] = 'Cache table for the Geonames module to store results from the geonames webservice.';

  return $schema;
}

/**
 * Implements hook_install().
 */
function geonames_install() {
  // TODO The drupal_(un)install_schema functions are called automatically in D7.;
  // drupal_install_schema('geonames');
}

/**
 * Implements hook_uninstall().
 */
function geonames_uninstall() {
  // TODO The drupal_(un)install_schema functions are called automatically in D7.;
  // drupal_uninstall_schema('geonames');
  variable_del('geonames_metadata_updated');
  variable_del('geonames_commercial_credits');
  variable_del('geonames_commercial_credits_since');
  // TODO: remove settings
}

/**
 * Implements hook_requirements().
 *
 * Determine whether geonames has current metadata, and emit a warning if not.
 */
function geonames_requirements($phase) {
  $requirements = array();
  $t = get_t();

  // Check for SimpleXML
  if (!class_exists('SimpleXMLElement')) {
    $requirements['geonames_simplexml'] = array(
      'title' => $t('SimpleXML'),
      'value' => $t('Not found'),
      'severity' => REQUIREMENT_ERROR,
      'description' => $t('Geonames requires the PHP <a href="!simplexml_url">SimpleXML</a> library.', array('!simplexml_url' => 'http://php.net/manual/en/simplexml.setup.php')),
    );
  }

  // Check for metadata
  if ($phase == 'runtime') {
    // Determine status of geonames metadata
    $updated = variable_get('geonames_metadata_updated', 0);
    $values = array(
      '!numcountries' => db_query('SELECT COUNT(*) FROM {geonames_countryinfo}')->fetchField(),
      '!numfeaturecodes' => db_query('SELECT COUNT(*) FROM {geonames_featurecodes}')->fetchField(),
      '!updated' => $updated ? $t('Last run !interval ago', array('!interval' => format_interval(REQUEST_TIME - $updated))) : $t('Never updated'),
    );

    // Produce suitable message
    $requirements['geonames_metadata'] = array(
      'title' => $t('Geonames Metadata'),
      'value' => $t('!updated (!numcountries countries and !numfeaturecodes feature codes)', $values),
    );
    if ($updated == 0 || $values['!numcountries'] == 0 || $values['!numfeaturecodes'] == 0) {
      $requirements['geonames_metadata']['description'] = $t('Metadata is incomplete. Please check the !link to manually refresh.', array('!link' => l('geonames settings', 'admin/config/geonames')));
      $requirements['geonames_metadata']['severity'] = REQUIREMENT_WARNING;
    }
  }
  return $requirements;
}

/**
 * @todo Please insert a Doxygen style comment for this hook_update_N.
 *
 */
function geonames_update_7000() {
  // Remove all references to variable geonames_cache_table - this is now hard
  // coded. Don't attempt to delete the old table, but warn if it was something
  // other than 'cache' or 'cache_geonames'.
  $geonames_cache_table = variable_get('geonames_cache_table', 'cache_geonames');
  if ($geonames_cache_table != 'cache' && $geonames_cache_table != 'cache_geonames') {
    drupal_set_message(t('Cache table %table may no longer be used', array('%table' => $geonames_cache_table)), 'warning');
  }
  variable_del('geonames_cache_table');
}

/**
 * Simplify configuration relating to commercial web-services.
 */
function geonames_update_7001() {
  // Now there are just explicit settings for the URL to use, whether
  // to count credits, and which username to use. For the new servers
  // at api.geonames.org username is *required*.

  $commercial_active = variable_get('geonames_commercial_active', FALSE);
  $server = $commercial_active ? variable_get('geonames_commercial_server', '') : GEONAMES_FREE_SERVER_URL;
  $username = variable_get('geonames_commercial_username', '');
  if ($username === '') {
    $link = l('GeoNames settings', 'admin/config/geonames');
    drupal_set_message('Geonames server username is not set. Please configure this at '. $link, 'warning');
  }

  variable_set('geonames_server', $server);
  variable_set('geonames_count_credits', $commercial_active);
  variable_set('geonames_username', $username);

  variable_del('geonames_commercial_active');
  variable_del('geonames_commercial_server');
  variable_del('geonames_commercial_username');
}