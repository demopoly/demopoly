<?php 
/**
 * @file
 * Code for the demopoly_common feature.
 */
include_once('demopoly_registration.features.inc');
/**
 * implements hook_form_alter()
 */
function demopoly_registration_form_alter(&$form,&$form_state,$form_id) {
	global $user;
	if ($form_id=='user_profile_form') {
		$form['#submit'][]='_demopoly_profile_edit_submit';
		$form['save_and_go']=array(
				'#type'=>'submit',
				'#value'=>'Save and go',
				'#submit'=>array('_demopoly_profile_edit_submit_forward'),
				'#weight'=>100
				
				);
		unset($form['account']['current_pass']);
		$form['account']['current_pass_required_values']['#value']=array();
		
	}
	if ($form_id=='user_register_form') {
		$form['text']=array('#type'=>'markup','#markup'=>'<h1>Take part</h1>Do you want to take part? Please note that your participation requires the indication of some data. It contains the following two steps:

1. Email confirmation<br />2. Participation and optional picture upload<br />

After having sent the below data, youll get an Email including a link. Please copy/paste that link in order to come back and to proceed. Please note first that your participation is conditioned by age. For more information see the info-boxes and privacy .<br><br><br>','#weight'=>-20);
		$form['youth_protection']=array('#type'=>'fieldset','#title'=>'youth protections','#weight'=>-10);
		$form['youth_protection']['youth_checkbox']=array('#type'=>'checkbox','#required'=>true,'#title'=>'I am 14 years old or older');
		$form['agree']=array('#type'=>'fieldset','#title'=>'terms and conditions','#weight'=>10);
		$form['agree']['agree_checkbox']=array('#type'=>'checkbox','#required'=>true,'#title'=>'I agree to all terms and conditions <a href="/terms" class="terms-link">LEGALS / PRIVACY</a>');
		$form['#submit'][]='_demopoly_registration_submit';
	}
}
/**
 * implements hook_menu()
 */
function demopoly_registration_menu() {
	$items['user/register/thanks'] = array(
			'title' => 'Thank you for participatin',
			'description' => "",
			'page callback' => '_demopoly_registration_thanks',
			'access callback' => true,
			'type' => MENU_CALLBACK,
	);
	return $items;
}
function anangu_registration_save_user(){
	global $user;
	$edit = array();
	$edit['access']=true;
	$user->access=true;
	$edit['signature'] = 'registration_complete';
	user_save($user,$edit);
}
function _demopoly_registration_thanks() {
	//$messages = &drupal_get_messages();
	//unset($messages); 
	return '<h1>...Take part...</h1><h2>Hello</h2><div class="thanks-flow">thank you for taking part. 
	You\'ve received an Email. Please copy/paste the link in your Email in order to come back and to proceed.';
}
function demopoly_registration_init(){
	global $user;
	
	if($user->uid > 1){
		if($user->signature != 'registration_complete'
				&& arg(0) != 'file'
				&& arg(0) != 'system'
				&& arg(0) != 'profilepicture'
				&& arg(0) != 'files'
				&& (arg(0) == 'user' && arg(2) != 'edit')
				&& (arg(0) == 'user' && arg(1) != 'logout')
				&& arg(0) != 'sites') {
			drupal_goto('user/'.$user->uid.'/edit');
		}
	}
}
function _demopoly_registration_submit($form, &$form_state) {
	$form_state['redirect']='user/register/thanks';	
}
function _demopoly_profile_edit_submit_forward($form, &$form_state) {
	anangu_registration_save_user();
	$form_state['redirect']=array('user',array('fragment'=>'add-protest'));
}
function _demopoly_profile_edit_submit($form, &$form_state) {
	anangu_registration_save_user();
}

function demopoly_registration_menu_alter(&$items) {
	$items['user/reset/%/%/%']['page arguments'] = array('demopoly_registration_pass_reset', 2, 3, 4);

}
function demopoly_registration_pass_reset($form, &$form_state, $uid, $timestamp, $hashed_pass, $action = NULL) {
	global $user;

	// When processing the one-time login link, we have to make sure that a user
	// isn't already logged in.
	if ($user->uid) {
		// The existing user is already logged in.
		if ($user->uid == $uid) {
			drupal_set_message(t('You are logged in as %user. <a href="!user_edit">Change your password.</a>', array('%user' => $user->name, '!user_edit' => url("user/$user->uid/edit"))));
		}
		// A different user is already logged in on the computer.
		else {
			$reset_link_account = user_load($uid);
			if (!empty($reset_link_account)) {
				drupal_set_message(t('Another user (%other_user) is already logged into the site on this computer, but you tried to use a one-time link for user %resetting_user. Please <a href="!logout">logout</a> and try using the link again.',
						array('%other_user' => $user->name, '%resetting_user' => $reset_link_account->name, '!logout' => url('user/logout'))));
			} else {
				// Invalid one-time link specifies an unknown user.
				drupal_set_message(t('The one-time login link you clicked is invalid.'));
			}
		}
		drupal_goto();
	}
	else {
		// Time out, in seconds, until login URL expires. 24 hours = 86400 seconds.
		$timeout = 86400;
		$current = REQUEST_TIME;
		// Some redundant checks for extra security ?
		$users = user_load_multiple(array($uid), array('status' => '1'));
		if ($timestamp <= $current && $account = reset($users)) {
			// No time out for first time login.
			if ($account->login && $current - $timestamp > $timeout) {
				drupal_set_message(t('You have tried to use a one-time login link that has expired. Please request a new one using the form below.'));
				drupal_goto('user/password');
			}
			elseif ($account->uid && $timestamp >= $account->login && $timestamp <= $current && $hashed_pass == user_pass_rehash($account->pass, $timestamp, $account->login)) {
				// First stage is a confirmation form, then login
				if ($action == 'login') {
					watchdog('user', 'User %name used one-time login link at time %timestamp.', array('%name' => $account->name, '%timestamp' => $timestamp));
					// Set the new user.
					$user = $account;
					// user_login_finalize() also updates the login timestamp of the
					// user, which invalidates further use of the one-time login link.
					user_login_finalize();
					//drupal_set_message(t('You have just used your one-time login link. It is no longer necessary to use this link to log in. Please change your password.'));
					// Let the user's password be changed without the current password check.
					$token = drupal_hash_base64(drupal_random_bytes(55));
					$_SESSION['pass_reset_' . $user->uid] = $token;
					//drupal_goto('registration/people/first');
					drupal_goto('user/' . $user->uid . '/edit', array('query' => array('pass-reset-token' => $token)));
				}
				else {
					$form['message'] = array('#markup' => t('<p>This is a one-time login for %user_name and will expire on %expiration_date.</p><p>Click on this button to log in to the site and change your password.</p>', array('%user_name' => $account->name, '%expiration_date' => format_date($timestamp + $timeout))));
					$form['help'] = array('#markup' => '<p>' . t('This login can be used only once.') . '</p>');
					$form['actions'] = array('#type' => 'actions');
					$form['actions']['submit'] = array('#type' => 'submit', '#value' => t('Log in'));
					$form['#action'] = url("user/reset/$uid/$timestamp/$hashed_pass/login");
					drupal_goto("user/reset/$uid/$timestamp/$hashed_pass/login");
					return $form;
				}
			}
			else {
				drupal_set_message(t('You have tried to use a one-time login link that has either been used or is no longer valid. Please request a new one using the form below.'));
				drupal_goto('user/password');
			}
		}
		else {
			// Deny access, no more clues.
			// Everything will be in the watchdog's URL for the administrator to check.
			drupal_access_denied();
		}
	}
}

?>
